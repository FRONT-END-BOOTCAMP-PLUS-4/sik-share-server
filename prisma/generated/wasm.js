
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.NeighborhoodScalarFieldEnum = {
  id: 'id',
  name: 'name',
  district: 'district',
  lat: 'lat',
  lng: 'lng'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  neighborhoodId: 'neighborhoodId',
  email: 'email',
  nickname: 'nickname',
  profileUrl: 'profileUrl',
  address: 'address',
  createdAt: 'createdAt',
  shareScore: 'shareScore',
  publicId: 'publicId'
};

exports.Prisma.GroupBuyScalarFieldEnum = {
  id: 'id',
  organizerId: 'organizerId',
  neighborhoodId: 'neighborhoodId',
  title: 'title',
  capacity: 'capacity',
  desiredItem: 'desiredItem',
  meetingDate: 'meetingDate',
  createdAt: 'createdAt',
  locationAddress: 'locationAddress',
  locationNote: 'locationNote',
  description: 'description',
  status: 'status'
};

exports.Prisma.GroupBuyParticipantScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  groupBuyId: 'groupBuyId',
  createdAt: 'createdAt'
};

exports.Prisma.GroupBuyImageScalarFieldEnum = {
  id: 'id',
  groupBuyId: 'groupBuyId',
  url: 'url'
};

exports.Prisma.ShareScalarFieldEnum = {
  id: 'id',
  shareItemId: 'shareItemId',
  neighborhoodId: 'neighborhoodId',
  ownerId: 'ownerId',
  recipientId: 'recipientId',
  title: 'title',
  createdAt: 'createdAt',
  meetingDate: 'meetingDate',
  lat: 'lat',
  lng: 'lng',
  locationAddress: 'locationAddress',
  locationNote: 'locationNote',
  description: 'description',
  status: 'status'
};

exports.Prisma.ShareImageScalarFieldEnum = {
  id: 'id',
  shareId: 'shareId',
  url: 'url'
};

exports.Prisma.ShareItemScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  writerId: 'writerId',
  recipientId: 'recipientId',
  shareId: 'shareId',
  grade: 'grade',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.ReviewShortReviewScalarFieldEnum = {
  id: 'id',
  reviewId: 'reviewId',
  shortReviewOptionId: 'shortReviewOptionId'
};

exports.Prisma.ShortReviewOptionScalarFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  isRead: 'isRead',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.GroupBuyChatScalarFieldEnum = {
  id: 'id',
  groupBuyId: 'groupBuyId',
  createdAt: 'createdAt'
};

exports.Prisma.GroupBuyChatMessageScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  groupBuyChatId: 'groupBuyChatId',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.GroupBuyChatParticipantScalarFieldEnum = {
  id: 'id',
  lastReadItemId: 'lastReadItemId',
  userId: 'userId',
  groupBuyChatId: 'groupBuyChatId',
  joinedAt: 'joinedAt'
};

exports.Prisma.ShareChatScalarFieldEnum = {
  id: 'id',
  shareId: 'shareId',
  createdAt: 'createdAt'
};

exports.Prisma.ShareChatMessageScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  shareChatId: 'shareChatId',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.ShareChatParticipantScalarFieldEnum = {
  id: 'id',
  lastReadItemId: 'lastReadItemId',
  userId: 'userId',
  shareChatId: 'shareChatId',
  joinedAt: 'joinedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Neighborhood: 'Neighborhood',
  User: 'User',
  GroupBuy: 'GroupBuy',
  GroupBuyParticipant: 'GroupBuyParticipant',
  GroupBuyImage: 'GroupBuyImage',
  Share: 'Share',
  ShareImage: 'ShareImage',
  ShareItem: 'ShareItem',
  Review: 'Review',
  ReviewShortReview: 'ReviewShortReview',
  ShortReviewOption: 'ShortReviewOption',
  Notification: 'Notification',
  GroupBuyChat: 'GroupBuyChat',
  GroupBuyChatMessage: 'GroupBuyChatMessage',
  GroupBuyChatParticipant: 'GroupBuyChatParticipant',
  ShareChat: 'ShareChat',
  ShareChatMessage: 'ShareChatMessage',
  ShareChatParticipant: 'ShareChatParticipant'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
